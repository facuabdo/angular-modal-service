{"ast":null,"code":"import { Subject } from \"rxjs\";\nexport class DialogRef {\n  constructor() {\n    /** Emits when the dialog has been closed. */\n    this.closed = new Subject();\n  }\n}","map":{"version":3,"names":["Subject","DialogRef","constructor","closed"],"sources":["/Users/facundo.abdo/Develop/angular-modal-service/src/app/dialog-service/dialog-ref.ts"],"sourcesContent":["import { Observable, Subject } from \"rxjs\";\n\nimport { ComponentRef } from \"@angular/core\";\n\nexport class DialogRef<R = unknown, C = unknown> {\n  /**\n   * Instance of component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  readonly componentInstance: C | null;\n\n  /**\n   * `ComponentRef` of the component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  readonly componentRef: ComponentRef<C> | null;\n\n  /** Emits when the dialog has been closed. */\n  readonly closed: Observable<R | undefined> = new Subject<R | undefined>();\n\n  constructor() {}\n}\n"],"mappings":"AAAA,SAAqBA,OAAO,QAAQ,MAAM;AAI1C,OAAM,MAAOC,SAAS;EAgBpBC,YAAA;IAHA;IACS,KAAAC,MAAM,GAA8B,IAAIH,OAAO,EAAiB;EAE1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}