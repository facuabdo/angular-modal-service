{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ModalService {\n  constructor(injector, viewContainerRef) {\n    this.injector = injector;\n    this.viewContainerRef = viewContainerRef;\n    this.modalRefs = {};\n  }\n  open(component) {\n    this.close();\n    const componentRef = this.viewContainerRef.createComponent(component, {\n      injector: this.injector\n    });\n    this.modalRefs[crypto.randomUUID()] = componentRef;\n    return componentRef;\n  }\n  close() {\n    if (this.modalRefs) {\n      // this.modalRefs.destroy();\n    }\n  }\n  static #_ = this.ɵfac = function ModalService_Factory(t) {\n    return new (t || ModalService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ViewContainerRef));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalService,\n    factory: ModalService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["ModalService","constructor","injector","viewContainerRef","modalRefs","open","component","close","componentRef","createComponent","crypto","randomUUID","_","i0","ɵɵinject","Injector","ViewContainerRef","_2","factory","ɵfac","providedIn"],"sources":["/Users/facundo.abdo/Develop/angular-modal-service/src/app/modal.service.ts"],"sourcesContent":["// modal.service.ts\n\nimport {\n  ApplicationRef,\n  ComponentRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ModalService {\n  private modalRefs: { [key: string]: ComponentRef<any> } = {};\n\n  constructor(\n    private injector: Injector,\n    private viewContainerRef: ViewContainerRef\n  ) {}\n\n  open<T>(component: Type<T>): ComponentRef<T> {\n    this.close();\n\n    const componentRef = this.viewContainerRef.createComponent(component, {\n      injector: this.injector,\n    });\n\n    this.modalRefs[crypto.randomUUID()] = componentRef;\n\n    return componentRef;\n  }\n\n  close() {\n    if (this.modalRefs) {\n      // this.modalRefs.destroy();\n    }\n  }\n}\n"],"mappings":";AAcA,OAAM,MAAOA,YAAY;EAGvBC,YACUC,QAAkB,EAClBC,gBAAkC;IADlC,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAJlB,KAAAC,SAAS,GAAyC,EAAE;EAKzD;EAEHC,IAAIA,CAAIC,SAAkB;IACxB,IAAI,CAACC,KAAK,EAAE;IAEZ,MAAMC,YAAY,GAAG,IAAI,CAACL,gBAAgB,CAACM,eAAe,CAACH,SAAS,EAAE;MACpEJ,QAAQ,EAAE,IAAI,CAACA;KAChB,CAAC;IAEF,IAAI,CAACE,SAAS,CAACM,MAAM,CAACC,UAAU,EAAE,CAAC,GAAGH,YAAY;IAElD,OAAOA,YAAY;EACrB;EAEAD,KAAKA,CAAA;IACH,IAAI,IAAI,CAACH,SAAS,EAAE;MAClB;IAAA;EAEJ;EAAC,QAAAQ,CAAA,G;qBAxBUZ,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAD,EAAA,CAAAE,QAAA,GAAAF,EAAA,CAAAC,QAAA,CAAAD,EAAA,CAAAG,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZjB,YAAY;IAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}