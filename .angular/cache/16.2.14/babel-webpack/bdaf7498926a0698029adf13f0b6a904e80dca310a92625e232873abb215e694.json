{"ast":null,"code":"import { ViewContainerRef, inject } from \"@angular/core\";\nimport { DialogService } from \"./dialog/dialog.service\";\nimport { ExampleComponent } from \"./example/example/example.component\";\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"template\"];\nfunction AppComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"This is the projected content\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.modalService = inject(DialogService);\n    this.viewContainerRef = inject(ViewContainerRef);\n    this.modalService.init(this.viewContainerRef);\n  }\n  openModalFromTemplate() {\n    const modalRef = this.modalService.open(this.templateRef);\n  }\n  openModalFromComponent() {\n    const modalRef = this.modalService.open(ExampleComponent);\n    setTimeout(() => modalRef.close(), 3000);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 0,\n    consts: [[3, \"click\"], [\"template\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_0_listener() {\n          return ctx.openModalFromTemplate();\n        });\n        i0.ɵɵtext(1, \" Open Modal From Template \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n          return ctx.openModalFromComponent();\n        });\n        i0.ɵɵtext(3, \" Open Modal From Component \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AppComponent_ng_template_4_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["ViewContainerRef","inject","DialogService","ExampleComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AppComponent","constructor","modalService","viewContainerRef","init","openModalFromTemplate","modalRef","open","templateRef","openModalFromComponent","setTimeout","close","_","_2","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵlistener","AppComponent_Template_button_click_0_listener","AppComponent_Template_button_click_2_listener","ɵɵtemplate","AppComponent_ng_template_4_Template","ɵɵtemplateRefExtractor"],"sources":["/Users/facundo.abdo/Develop/angular-modal-service/src/app/app.component.ts"],"sourcesContent":["import {\n  Component,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  inject,\n} from \"@angular/core\";\n\nimport { DialogService } from \"./dialog/dialog.service\";\nimport { ExampleComponent } from \"./example/example/example.component\";\n\n@Component({\n  selector: \"app-root\",\n  template: `<button (click)=\"openModalFromTemplate()\">\n      Open Modal From Template\n    </button>\n    <button (click)=\"openModalFromComponent()\">\n      Open Modal From Component\n    </button>\n    <ng-template #template\n      ><h1>This is the projected content</h1></ng-template\n    >`,\n})\nexport class AppComponent {\n  modalService = inject(DialogService);\n  viewContainerRef = inject(ViewContainerRef);\n\n  @ViewChild(\"template\", { static: true }) templateRef!: TemplateRef<any>;\n\n  constructor() {\n    this.modalService.init(this.viewContainerRef);\n  }\n\n  openModalFromTemplate() {\n    const modalRef = this.modalService.open(this.templateRef);\n  }\n\n  openModalFromComponent() {\n    const modalRef = this.modalService.open(ExampleComponent);\n\n    setTimeout(() => modalRef.close(), 3000);\n  }\n}\n"],"mappings":"AAAA,SAIEA,gBAAgB,EAChBC,MAAM,QACD,eAAe;AAEtB,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,gBAAgB,QAAQ,qCAAqC;;;;;IAW/DC,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,oCAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;AAG7C,OAAM,MAAOC,YAAY;EAMvBC,YAAA;IALA,KAAAC,YAAY,GAAGT,MAAM,CAACC,aAAa,CAAC;IACpC,KAAAS,gBAAgB,GAAGV,MAAM,CAACD,gBAAgB,CAAC;IAKzC,IAAI,CAACU,YAAY,CAACE,IAAI,CAAC,IAAI,CAACD,gBAAgB,CAAC;EAC/C;EAEAE,qBAAqBA,CAAA;IACnB,MAAMC,QAAQ,GAAG,IAAI,CAACJ,YAAY,CAACK,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC;EAC3D;EAEAC,sBAAsBA,CAAA;IACpB,MAAMH,QAAQ,GAAG,IAAI,CAACJ,YAAY,CAACK,IAAI,CAACZ,gBAAgB,CAAC;IAEzDe,UAAU,CAAC,MAAMJ,QAAQ,CAACK,KAAK,EAAE,EAAE,IAAI,CAAC;EAC1C;EAAC,QAAAC,CAAA,G;qBAlBUZ,YAAY;EAAA;EAAA,QAAAa,EAAA,G;UAAZb,YAAY;IAAAc,SAAA;IAAAC,SAAA,WAAAC,mBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;QAVZrB,EAAA,CAAAC,cAAA,gBAA0C;QAAlCD,EAAA,CAAAuB,UAAA,mBAAAC,8CAAA;UAAA,OAASF,GAAA,CAAAb,qBAAA,EAAuB;QAAA,EAAC;QAChDT,EAAA,CAAAE,MAAA,iCACF;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACTH,EAAA,CAAAC,cAAA,gBAA2C;QAAnCD,EAAA,CAAAuB,UAAA,mBAAAE,8CAAA;UAAA,OAASH,GAAA,CAAAT,sBAAA,EAAwB;QAAA,EAAC;QACxCb,EAAA,CAAAE,MAAA,kCACF;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACTH,EAAA,CAAA0B,UAAA,IAAAC,mCAAA,gCAAA3B,EAAA,CAAA4B,sBAAA,CAEC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}