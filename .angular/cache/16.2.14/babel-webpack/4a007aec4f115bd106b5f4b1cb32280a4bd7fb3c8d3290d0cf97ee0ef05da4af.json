{"ast":null,"code":"import { Subject } from \"rxjs\";\nexport class DialogRef {\n  close(result) {\n    const closedSubject = this.closed;\n    closedSubject.next(result);\n    closedSubject.complete();\n    this.componentInstance = undefined;\n  }\n  constructor() {\n    /** Emits when the dialog has been closed. */\n    this.closed = new Subject();\n  }\n}","map":{"version":3,"names":["Subject","DialogRef","close","result","closedSubject","closed","next","complete","componentInstance","undefined","constructor"],"sources":["/Users/facundo.abdo/Develop/angular-modal-service/src/app/dialog-service/dialog-ref.ts"],"sourcesContent":["import { Observable, Subject } from \"rxjs\";\n\nimport { ComponentRef } from \"@angular/core\";\n\nexport class DialogRef<R = unknown, C = unknown> {\n  /**\n   * Instance of component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  readonly componentInstance: C | undefined;\n\n  /**\n   * `ComponentRef` of the component opened into the dialog. Will be\n   * null when the dialog is opened using a `TemplateRef`.\n   */\n  readonly componentRef: ComponentRef<C> | undefined;\n\n  /** Emits when the dialog has been closed. */\n  readonly closed: Observable<R | undefined> = new Subject<R | undefined>();\n\n  close(result?: R): void {\n    const closedSubject = this.closed as Subject<R | undefined>;\n\n    closedSubject.next(result);\n    closedSubject.complete();\n    (this as { componentInstance: C | undefined }).componentInstance =\n      undefined;\n  }\n\n  constructor() {}\n}\n"],"mappings":"AAAA,SAAqBA,OAAO,QAAQ,MAAM;AAI1C,OAAM,MAAOC,SAAS;EAgBpBC,KAAKA,CAACC,MAAU;IACd,MAAMC,aAAa,GAAG,IAAI,CAACC,MAAgC;IAE3DD,aAAa,CAACE,IAAI,CAACH,MAAM,CAAC;IAC1BC,aAAa,CAACG,QAAQ,EAAE;IACvB,IAA6C,CAACC,iBAAiB,GAC9DC,SAAS;EACb;EAEAC,YAAA;IAZA;IACS,KAAAL,MAAM,GAA8B,IAAIL,OAAO,EAAiB;EAW1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}